{
  "contractName": "ERC721Full",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "displayApproval",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"displayApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"see https://eips.ethereum.org/EIPS/eip-721\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See `IERC165.supportsInterface`.      * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}},\"title\":\"Full ERC721 Token This implementation includes all the required and some optional functionality of the ERC721 standard Moreover, it includes approve all functionality using operator terminology\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol\":\"ERC721Full\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x421cd6003cb6fd887f804f89acdd3c3cdf9073f757106edd6f9204c3545dff6c\",\"urls\":[\"bzz-raw://82cdaab90612e81c4de18c2cfe9f5d3b6889f706b1dda255b7a86b6683f0c8f9\",\"dweb:/ipfs/QmYPCGiCpbcQzsRxC2wFT5SPYYq123tGbMakmPqZkjix4y\"]},\"project:/node_modules/openzeppelin-solidity/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x520b2c29c3d89918641e9524137b1d9c3e75bebd1cbd9fb64caa0415ac4cfc1e\",\"urls\":[\"bzz-raw://5a7c38da3ee22e636c6ccd4dc6c41e8a637d8ad887636ba9e1a14365691287ed\",\"dweb:/ipfs/Qmc9ZC61LmiPT7FzHrx5DtoiwW9KmeyJgpekNAkXTEpwQL\"]},\"project:/node_modules/openzeppelin-solidity/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0x57c751b5be8ee8d84e838af9e2d0ea1ff2cd36afad81e93fb1efa0f6e0f21c1e\",\"urls\":[\"bzz-raw://9e068042b19e5d3eab96f342bbb8f0dd3736c5801d946e11f70d8101e663e60d\",\"dweb:/ipfs/QmRL5MQFVeF1KwRXEFRPjYeySK8dMmSTX2dGg4E9XwHXzC\"]},\"project:/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9194acaa467da3228cea42c3168b23fae17941800328032108e3153d1a0fbb5f\",\"urls\":[\"bzz-raw://eaaa71d327785f02b97ae8fe9e78f6503274303db082379fb8f3af088f1f94f3\",\"dweb:/ipfs/QmQTCRvgddXvbwRpVYNr6F2qtyrf98u6qaz97BsSJ1PfZe\"]},\"project:/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x232e66a9d0e45b6980800b58b17edcf2b661e3bd3c63eb3d79e268d3cf01df01\",\"urls\":[\"bzz-raw://4535b82e0d34ebe1916246e615358aa0cc4bb14e0125e68eada737eab466162c\",\"dweb:/ipfs/QmU2LuEZPmYtF6Fss11vYi6Lv6WR8cSLRGWXiQbxmBnptN\"]},\"project:/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0xc98d0d34206de6ccb28cb5f39fc6cbc22cb87eae591955af11508012f708988b\",\"urls\":[\"bzz-raw://229138aaca37e30bb6f54c80a08bea810ae938e6fb3c1082bc428598f3d4f5d2\",\"dweb:/ipfs/QmVf32DN7rdXCuhnLEgqQBLey8QJw7rJfNq2WmAZ62BCcd\"]},\"project:/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol\":{\"keccak256\":\"0xd568ccda709482dafb2a394f299fafff8b888ce8f04190da48d67ebbdb56946f\",\"urls\":[\"bzz-raw://8fc014359f1440b5b9b282caabcfc8e652632c6ba7d9baac3c44481d61d50265\",\"dweb:/ipfs/QmWPeECMuBKdCh9BABGAPuoM5yVdNjM3Hss9tisVSEgDsw\"]},\"project:/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0xba63a84a161f1842236f3c9505c3f8f175d26459eba11b6e763b55634b47c0f0\",\"urls\":[\"bzz-raw://2390def75e067d6a77c5ebf7d7340fcdc431b89f317e725c16a6ace83533da8f\",\"dweb:/ipfs/QmQjxukXiKJYzejdgABo2kKQXsLq45Kc38umjSqF2hVwqR\"]},\"project:/node_modules/openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x2673e48990332ab869a2651a98de65d597ff254fa66f167d13b3a8be0223c622\",\"urls\":[\"bzz-raw://6f6e13d9f8152e31a2ae195aca10372276903d1281736d200dc192136edabdcc\",\"dweb:/ipfs/QmYo9vWzamYP1X4hZajmnSU4egvAG1MwBNf58e7vJPsTDi\"]},\"project:/node_modules/openzeppelin-solidity/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x00ab4bb6af6d6c42cd1cdc6ad041a84c71dcc671bbb7a4a6dcdc2c103bff8dae\",\"urls\":[\"bzz-raw://6d76762f7d00c7c3e3c9df8b5c4ba92d88cb58e9d6724732fa15700c7e42bb3c\",\"dweb:/ipfs/QmdcoMehHQ8tnKGrfAiaCfPKkmqhtxc9HszJDHVuJVpQnz\"]},\"project:/node_modules/openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xff23c79b568abcb7b18a2e46d56a0f223fb2cfd87528296f8cf8b244eb0408f3\",\"urls\":[\"bzz-raw://4cfff2d02ed9dd50a154218a493ae20156cf7b37f88a0acb0c711803c7d30de1\",\"dweb:/ipfs/QmbTKgEMSStQpf3yNqgbFRfbo6cb2dQzw6cgAm5PNzw8tB\"]},\"project:/node_modules/openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x2f704c08dbbda9be57735f20080be51e5f27295f1996b32cd9423c395deeb885\",\"urls\":[\"bzz-raw://4bf4f3c0b28acd10920bcac6b96c14a874f6cfc8d8bcad50ef76d5adb394ea47\",\"dweb:/ipfs/QmVynVcDXCyfzJnJ3QjoFDrR7jacg9jihghghAeH4jk3pU\"]},\"project:/node_modules/openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xb0caafc555cb17f8183f5308424576a395c84930d3d953ac67d5768991805c86\",\"urls\":[\"bzz-raw://e3af56d960cf2679475f2ea565685fd6e9a1fed3efe8129537ae440cead75824\",\"dweb:/ipfs/QmWE7VF1yy4hf6RcyGxTzsareBzDP9wjoTwutoWxvji1ot\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200250438038062002504833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b506040525050508181620001cf6301ffc9a760e01b6200025360201b60201c565b620001e76380ac58cd60e01b6200025360201b60201c565b620001ff63780e9d6360e01b6200025360201b60201c565b8160099080519060200190620002179291906200035c565b5080600a9080519060200190620002309291906200035c565b5062000249635b5e139f60e01b6200025360201b60201c565b505050506200040b565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620002f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200039f57805160ff1916838001178555620003d0565b82800160010185558215620003d0579182015b82811115620003cf578251825591602001919060010190620003b2565b5b509050620003df9190620003e3565b5090565b6200040891905b8082111562000404576000816000905550600101620003ea565b5090565b90565b6120e9806200041b6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80634f6ccce7116100a2578063a22cb46511610071578063a22cb4651461059b578063b88d4fde146105eb578063c87b56dd146106f0578063e985e9c514610797578063f1d33925146108135761010b565b80634f6ccce7146104105780636352211e1461045257806370a08231146104c057806395d89b41146105185761010b565b806318160ddd116100de57806318160ddd146102b457806323b872dd146102d25780632f745c591461034057806342842e0e146103a25761010b565b806301ffc9a71461011057806306fdde0314610175578063081812fc146101f8578063095ea7b314610266575b600080fd5b61015b6004803603602081101561012657600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505061086f565b604051808215151515815260200191505060405180910390f35b61017d6108d6565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101bd5780820151818401526020810190506101a2565b50505050905090810190601f1680156101ea5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102246004803603602081101561020e57600080fd5b8101908080359060200190929190505050610978565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102b26004803603604081101561027c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a13565b005b6102bc610bec565b6040518082815260200191505060405180910390f35b61033e600480360360608110156102e857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610bf9565b005b61038c6004803603604081101561035657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c68565b6040518082815260200191505060405180910390f35b61040e600480360360608110156103b857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d27565b005b61043c6004803603602081101561042657600080fd5b8101908080359060200190929190505050610d47565b6040518082815260200191505060405180910390f35b61047e6004803603602081101561046857600080fd5b8101908080359060200190929190505050610dc7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610502600480360360208110156104d657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e8f565b6040518082815260200191505060405180910390f35b610520610f64565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610560578082015181840152602081019050610545565b50505050905090810190601f16801561058d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105e9600480360360408110156105b157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611006565b005b6106ee6004803603608081101561060157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561066857600080fd5b82018360208201111561067a57600080fd5b8035906020019184600183028401116401000000008311171561069c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506111a9565b005b61071c6004803603602081101561070657600080fd5b810190808035906020019092919050505061121b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561075c578082015181840152602081019050610741565b50505050905090810190601f1680156107895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107f9600480360360408110156107ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061132e565b604051808215151515815260200191505060405180910390f35b6108556004803603602081101561082957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113c2565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060098054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561096e5780601f106109435761010080835404028352916020019161096e565b820191906000526020600020905b81548152906001019060200180831161095157829003601f168201915b5050505050905090565b600061098382611455565b6109d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180611fb3602c913960400191505060405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610a1e82610dc7565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610aa5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806120376021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610ae55750610ae4813361132e565b5b610b3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526038815260200180611f286038913960400191505060405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600780549050905090565b610c0333826114c7565b610c58576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806120586031913960400191505060405180910390fd5b610c638383836115bb565b505050565b6000610c7383610e8f565b8210610cca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180611e7b602b913960400191505060405180910390fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610d1457fe5b9060005260206000200154905092915050565b610d42838383604051806020016040528060008152506111a9565b505050565b6000610d51610bec565b8210610da8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612089602c913960400191505060405180910390fd5b60078281548110610db557fe5b90600052602060002001549050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610e86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180611f8a6029913960400191505060405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f16576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180611f60602a913960400191505060405180910390fd5b610f5d600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206115df565b9050919050565b6060600a8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ffc5780601f10610fd157610100808354040283529160200191610ffc565b820191906000526020600020905b815481529060010190602001808311610fdf57829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110a8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6111b4848484610bf9565b6111c0848484846115ed565b611215576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180611ea66032913960400191505060405180910390fd5b50505050565b606061122682611455565b61127b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612008602f913960400191505060405180910390fd5b600b60008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113225780601f106112f757610100808354040283529160200191611322565b820191906000526020600020905b81548152906001019060200180831161130557829003601f168201915b50505050509050919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60006114d282611455565b611527576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180611efc602c913960400191505060405180910390fd5b600061153283610dc7565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806115a157508373ffffffffffffffffffffffffffffffffffffffff1661158984610978565b73ffffffffffffffffffffffffffffffffffffffff16145b806115b257506115b1818561132e565b5b91505092915050565b6115c68383836117d6565b6115d08382611a31565b6115da8282611bcf565b505050565b600081600001549050919050565b600061160e8473ffffffffffffffffffffffffffffffffffffffff16611c96565b61161b57600190506117ce565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156116f65780820151818401526020810190506116db565b50505050905090810190601f1680156117235780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561174557600080fd5b505af1158015611759573d6000803e3d6000fd5b505050506040513d602081101561176f57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b8273ffffffffffffffffffffffffffffffffffffffff166117f682610dc7565b73ffffffffffffffffffffffffffffffffffffffff1614611862576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180611fdf6029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156118e8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611ed86024913960400191505060405180910390fd5b6118f181611ca9565b611938600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611d67565b61197f600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611d8a565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611a896001600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050611da090919063ffffffff16565b9050600060066000848152602001908152602001600020549050818114611b76576000600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611af657fe5b9060005260206000200154905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611b4e57fe5b9060005260206000200181905550816006600083815260200190815260200160002081905550505b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611bc89190611e29565b5050505050565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506006600083815260200190815260200160002081905550600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b600080823b905060008111915050919050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611d645760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b611d7f60018260000154611da090919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600082821115611e18576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b815481835581811115611e5057818360005260206000209182019101611e4f9190611e55565b5b505050565b611e7791905b80821115611e73576000816000905550600101611e5b565b5090565b9056fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473a265627a7a72315820413e6d1b7e3f125100ea9d514ea01bfdc4a1d3e0be46e8d995db07f99cd52f3c64736f6c63430005100032",
  "deployedBytecode": "",
  "sourceMap": "394:231:8:-;;;465:157;8:9:-1;5:2;;;30:1;27;20:12;5:2;465:157:8;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;465:157:8;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;465:157:8;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;465:157:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;465:157:8;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;465:157:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;542:4;548:6;742:40:3;399:10;761:20;;742:18;;;:40;;:::i;:::-;2272::6;2142:10;2291:20;;2272:18;;;:40;;:::i;:::-;1353:51:7;1161:10;1372:31;;1353:18;;;:51;;:::i;:::-;862:4:9;854:5;:12;;;;;;;;;;;;:::i;:::-;;887:6;877:7;:16;;;;;;;;;;;;:::i;:::-;;984:49;710:10;1003:29;;984:18;;;:49;;:::i;:::-;781:260;;465:157:8;;394:231;;1489:193:3;1580:10;1565:25;;:11;:25;;;;;1557:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1670:4;1634:20;:33;1655:11;1634:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1489:193;:::o;394:231:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "394:231:8:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;394:231:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:135:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;947:135:3;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1152:85:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1152:85:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4341:204:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4341:204:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3627:421;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3627:421:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2185:96:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6018:290:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6018:290:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1794:232:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1794:232:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6954:134:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6954:134:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2627:199:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2627:199:7;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2968:228:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2968:228:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2531:211;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2531:211:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1352:89:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1352:89:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4846:248:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4846:248:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7807:268;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7807:268:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7807:268:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7807:268:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7807:268:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7807:268:6;;;;;;;;;;;;;;;:::i;:::-;;1648:205:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1648:205:9;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1648:205:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5424:147:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5424:147:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12756:124;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12756:124:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;947:135:3;1017:4;1041:20;:33;1062:11;1041:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1034:40;;947:135;;;:::o;1152:85:9:-;1191:13;1224:5;1217:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1152:85;:::o;4341:204:6:-;4400:7;4428:16;4436:7;4428;:16::i;:::-;4420:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4513:15;:24;4529:7;4513:24;;;;;;;;;;;;;;;;;;;;;4506:31;;4341:204;;;:::o;3627:421::-;3691:13;3707:16;3715:7;3707;:16::i;:::-;3691:32;;3748:5;3742:11;;:2;:11;;;;3734:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3826:5;3812:19;;:10;:19;;;:58;;;;3835:35;3852:5;3859:10;3835:16;:35::i;:::-;3812:58;3804:150;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3994:2;3967:15;:24;3983:7;3967:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;4032:7;4028:2;4012:28;;4021:5;4012:28;;;;;;;;;;;;3627:421;;;:::o;2185:96:7:-;2229:7;2256:10;:17;;;;2249:24;;2185:96;:::o;6018:290:6:-;6162:39;6181:10;6193:7;6162:18;:39::i;:::-;6154:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6268:32;6282:4;6288:2;6292:7;6268:13;:32::i;:::-;6018:290;;;:::o;1794:232:7:-;1874:7;1910:16;1920:5;1910:9;:16::i;:::-;1902:5;:24;1894:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1992:12;:19;2005:5;1992:19;;;;;;;;;;;;;;;2012:5;1992:26;;;;;;;;;;;;;;;;1985:33;;1794:232;;;;:::o;6954:134:6:-;7041:39;7058:4;7064:2;7068:7;7041:39;;;;;;;;;;;;:16;:39::i;:::-;6954:134;;;:::o;2627:199:7:-;2685:7;2721:13;:11;:13::i;:::-;2713:5;:21;2705:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2801:10;2812:5;2801:17;;;;;;;;;;;;;;;;2794:24;;2627:199;;;:::o;2968:228:6:-;3023:7;3043:13;3059:11;:20;3071:7;3059:20;;;;;;;;;;;;;;;;;;;;;3043:36;;3115:1;3098:19;;:5;:19;;;;3090:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3183:5;3176:12;;;2968:228;;;:::o;2531:211::-;2586:7;2631:1;2614:19;;:5;:19;;;;2606:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2700:34;:17;:24;2718:5;2700:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2693:41;;2531:211;;;:::o;1352:89:9:-;1393:13;1426:7;1419:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1352:89;:::o;4846:248:6:-;4932:10;4926:16;;:2;:16;;;;4918:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5022:8;4985:18;:30;5004:10;4985:30;;;;;;;;;;;;;;;:34;5016:2;4985:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;5073:2;5046:40;;5061:10;5046:40;;;5077:8;5046:40;;;;;;;;;;;;;;;;;;;;;;4846:248;;:::o;7807:268::-;7914:31;7927:4;7933:2;7937:7;7914:12;:31::i;:::-;7964:48;7987:4;7993:2;7997:7;8006:5;7964:22;:48::i;:::-;7956:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7807:268;;;;:::o;1648:205:9:-;1706:13;1740:16;1748:7;1740;:16::i;:::-;1732:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1826:10;:19;1837:7;1826:19;;;;;;;;;;;1819:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1648:205;;;:::o;5424:147:6:-;5504:4;5528:18;:25;5547:5;5528:25;;;;;;;;;;;;;;;:35;5554:8;5528:35;;;;;;;;;;;;;;;;;;;;;;;;;5521:42;;5424:147;;;;:::o;12756:124::-;12809:4;12838:18;:30;12857:10;12838:30;;;;;;;;;;;;;;;:34;12869:2;12838:34;;;;;;;;;;;;;;;;;;;;;;;;;12831:41;;12756:124;;;:::o;8277:155::-;8334:4;8351:13;8367:11;:20;8379:7;8367:20;;;;;;;;;;;;;;;;;;;;;8351:36;;8422:1;8405:19;;:5;:19;;;;8398:26;;;8277:155;;;:::o;8802:333::-;8887:4;8912:16;8920:7;8912;:16::i;:::-;8904:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8988:13;9004:16;9012:7;9004;:16::i;:::-;8988:32;;9050:5;9039:16;;:7;:16;;;:51;;;;9083:7;9059:31;;:20;9071:7;9059:11;:20::i;:::-;:31;;;9039:51;:87;;;;9094:32;9111:5;9118:7;9094:16;:32::i;:::-;9039:87;9031:96;;;8802:333;;;;:::o;3210:245:7:-;3296:38;3316:4;3322:2;3326:7;3296:19;:38::i;:::-;3347:47;3380:4;3386:7;3347:32;:47::i;:::-;3407:40;3435:2;3439:7;3407:27;:40::i;:::-;3210:245;;;:::o;1088:114:2:-;1153:7;1180;:14;;;1173:21;;1088:114;;;:::o;12049:356:6:-;12171:4;12198:15;:2;:13;;;:15::i;:::-;12193:60;;12237:4;12230:11;;;;12193:60;12265:13;12297:2;12281:36;;;12318:10;12330:4;12336:7;12345:5;12281:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12281:70:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12281:70:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12281:70:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12281:70:6;;;;;;;;;;;;;;;;12265:86;;733:10;12380:16;;12370:26;;;:6;:26;;;;12362:35;;;12049:356;;;;;;;:::o;11004:459::-;11118:4;11098:24;;:16;11106:7;11098;:16::i;:::-;:24;;;11090:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11201:1;11187:16;;:2;:16;;;;11179:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11257:23;11272:7;11257:14;:23::i;:::-;11293:35;:17;:23;11311:4;11293:23;;;;;;;;;;;;;;;:33;:35::i;:::-;11339:33;:17;:21;11357:2;11339:21;;;;;;;;;;;;;;;:31;:33::i;:::-;11408:2;11385:11;:20;11397:7;11385:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;11447:7;11443:2;11428:27;;11437:4;11428:27;;;;;;;;;;;;11004:459;;;:::o;6393:1148:7:-;6659:22;6684:32;6714:1;6684:12;:18;6697:4;6684:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;6659:57;;6727:18;6748:17;:26;6766:7;6748:26;;;;;;;;;;;;6727:47;;6895:14;6881:10;:28;6877:328;;6926:19;6948:12;:18;6961:4;6948:18;;;;;;;;;;;;;;;6967:14;6948:34;;;;;;;;;;;;;;;;6926:56;;7032:11;6999:12;:18;7012:4;6999:18;;;;;;;;;;;;;;;7018:10;6999:30;;;;;;;;;;;;;;;:44;;;;7149:10;7116:17;:30;7134:11;7116:30;;;;;;;;;;;:43;;;;6877:328;;7294:12;:18;7307:4;7294:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;6393:1148;;;;:::o;5217:186::-;5331:12;:16;5344:2;5331:16;;;;;;;;;;;;;;;:23;;;;5302:17;:26;5320:7;5302:26;;;;;;;;;;;:52;;;;5365:12;:16;5378:2;5365:16;;;;;;;;;;;;;;;5387:7;5365:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5365:30:7;;;;;;;;;;;;;;;;;;;;;;5217:186;;:::o;558:422:14:-;618:4;826:12;937:7;925:20;917:28;;971:1;964:4;:8;957:15;;;558:422;;;:::o;12573:175:6:-;12673:1;12637:38;;:15;:24;12653:7;12637:24;;;;;;;;;;;;;;;;;;;;;:38;;;12633:108;;12727:1;12692:15;:24;12708:7;12692:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;12633:108;12573:175;:::o;1309:110:2:-;1390:21;1409:1;1390:7;:14;;;:18;;:21;;;;:::i;:::-;1373:7;:14;;:38;;;;1309:110;:::o;1210:91::-;1292:1;1274:7;:14;;;:19;;;;;;;;;;;1210:91;:::o;1315:184:5:-;1373:7;1406:1;1401;:6;;1393:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1453:9;1469:1;1465;:5;1453:17;;1490:1;1483:8;;;1315:184;;;;:::o;394:231:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"./ERC721.sol\";\r\nimport \"./ERC721Enumerable.sol\";\r\nimport \"./ERC721Metadata.sol\";\r\n\r\n/**\r\n * @title Full ERC721 Token\r\n * This implementation includes all the required and some optional functionality of the ERC721 standard\r\n * Moreover, it includes approve all functionality using operator terminology\r\n * @dev see https://eips.ethereum.org/EIPS/eip-721\r\n */\r\ncontract ERC721Full is ERC721, ERC721Enumerable, ERC721Metadata {\r\n    constructor (string memory name, string memory symbol) public ERC721Metadata(name, symbol) {\r\n        // solhint-disable-previous-line no-empty-blocks\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Project\\starNotaryV2\\node_modules\\openzeppelin-solidity\\contracts\\token\\ERC721\\ERC721Full.sol",
  "ast": {
    "absolutePath": "project:/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
    "exportedSymbols": {
      "ERC721Full": [
        1502
      ]
    },
    "id": 1503,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1480,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "project:/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 1481,
        "nodeType": "ImportDirective",
        "scope": 1503,
        "sourceUnit": 1142,
        "src": "27:22:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 1482,
        "nodeType": "ImportDirective",
        "scope": 1503,
        "sourceUnit": 1479,
        "src": "51:32:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 1483,
        "nodeType": "ImportDirective",
        "scope": 1503,
        "sourceUnit": 1632,
        "src": "85:30:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1484,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1141,
              "src": "417:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1141",
                "typeString": "contract ERC721"
              }
            },
            "id": 1485,
            "nodeType": "InheritanceSpecifier",
            "src": "417:6:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1486,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1478,
              "src": "425:16:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$1478",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 1487,
            "nodeType": "InheritanceSpecifier",
            "src": "425:16:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1488,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1631,
              "src": "443:14:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$1631",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 1489,
            "nodeType": "InheritanceSpecifier",
            "src": "443:14:8"
          }
        ],
        "contractDependencies": [
          418,
          428,
          1141,
          1478,
          1631,
          1734,
          1761,
          1784
        ],
        "contractKind": "contract",
        "documentation": "@title Full ERC721 Token\nThis implementation includes all the required and some optional functionality of the ERC721 standard\nMoreover, it includes approve all functionality using operator terminology\n@dev see https://eips.ethereum.org/EIPS/eip-721",
        "fullyImplemented": true,
        "id": 1502,
        "linearizedBaseContracts": [
          1502,
          1631,
          1784,
          1478,
          1761,
          1141,
          1734,
          418,
          428
        ],
        "name": "ERC721Full",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1500,
              "nodeType": "Block",
              "src": "556:66:8",
              "statements": []
            },
            "documentation": null,
            "id": 1501,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1496,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1491,
                    "src": "542:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1497,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1493,
                    "src": "548:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1498,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1495,
                  "name": "ERC721Metadata",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1631,
                  "src": "527:14:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$1631_$",
                    "typeString": "type(contract ERC721Metadata)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "527:28:8"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1494,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1491,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1501,
                  "src": "478:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1490,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "478:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1493,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1501,
                  "src": "498:20:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1492,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "498:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "477:42:8"
            },
            "returnParameters": {
              "id": 1499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "556:0:8"
            },
            "scope": 1502,
            "src": "465:157:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1503,
        "src": "394:231:8"
      }
    ],
    "src": "0:627:8"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
      "exportedSymbols": {
        "ERC721Full": [
          1502
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".0"
          ]
        },
        "id": 1480,
        "name": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "attributes": {
          "SourceUnit": 1142,
          "absolutePath": "project:/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
          "file": "./ERC721.sol",
          "scope": 1503,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1481,
        "name": "ImportDirective",
        "src": "27:22:8"
      },
      {
        "attributes": {
          "SourceUnit": 1479,
          "absolutePath": "project:/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721Enumerable.sol",
          "file": "./ERC721Enumerable.sol",
          "scope": 1503,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1482,
        "name": "ImportDirective",
        "src": "51:32:8"
      },
      {
        "attributes": {
          "SourceUnit": 1632,
          "absolutePath": "project:/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721Metadata.sol",
          "file": "./ERC721Metadata.sol",
          "scope": 1503,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1483,
        "name": "ImportDirective",
        "src": "85:30:8"
      },
      {
        "attributes": {
          "contractDependencies": [
            418,
            428,
            1141,
            1478,
            1631,
            1734,
            1761,
            1784
          ],
          "contractKind": "contract",
          "documentation": "@title Full ERC721 Token\nThis implementation includes all the required and some optional functionality of the ERC721 standard\nMoreover, it includes approve all functionality using operator terminology\n@dev see https://eips.ethereum.org/EIPS/eip-721",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1502,
            1631,
            1784,
            1478,
            1761,
            1141,
            1734,
            418,
            428
          ],
          "name": "ERC721Full",
          "scope": 1503
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721",
                  "referencedDeclaration": 1141,
                  "type": "contract ERC721"
                },
                "id": 1484,
                "name": "UserDefinedTypeName",
                "src": "417:6:8"
              }
            ],
            "id": 1485,
            "name": "InheritanceSpecifier",
            "src": "417:6:8"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721Enumerable",
                  "referencedDeclaration": 1478,
                  "type": "contract ERC721Enumerable"
                },
                "id": 1486,
                "name": "UserDefinedTypeName",
                "src": "425:16:8"
              }
            ],
            "id": 1487,
            "name": "InheritanceSpecifier",
            "src": "425:16:8"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721Metadata",
                  "referencedDeclaration": 1631,
                  "type": "contract ERC721Metadata"
                },
                "id": 1488,
                "name": "UserDefinedTypeName",
                "src": "443:14:8"
              }
            ],
            "id": 1489,
            "name": "InheritanceSpecifier",
            "src": "443:14:8"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 1502,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "name",
                      "scope": 1501,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1490,
                        "name": "ElementaryTypeName",
                        "src": "478:6:8"
                      }
                    ],
                    "id": 1491,
                    "name": "VariableDeclaration",
                    "src": "478:18:8"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "symbol",
                      "scope": 1501,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1492,
                        "name": "ElementaryTypeName",
                        "src": "498:6:8"
                      }
                    ],
                    "id": 1493,
                    "name": "VariableDeclaration",
                    "src": "498:20:8"
                  }
                ],
                "id": 1494,
                "name": "ParameterList",
                "src": "477:42:8"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1499,
                "name": "ParameterList",
                "src": "556:0:8"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1631,
                      "type": "type(contract ERC721Metadata)",
                      "value": "ERC721Metadata"
                    },
                    "id": 1495,
                    "name": "Identifier",
                    "src": "527:14:8"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1491,
                      "type": "string memory",
                      "value": "name"
                    },
                    "id": 1496,
                    "name": "Identifier",
                    "src": "542:4:8"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1493,
                      "type": "string memory",
                      "value": "symbol"
                    },
                    "id": 1497,
                    "name": "Identifier",
                    "src": "548:6:8"
                  }
                ],
                "id": 1498,
                "name": "ModifierInvocation",
                "src": "527:28:8"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 1500,
                "name": "Block",
                "src": "556:66:8"
              }
            ],
            "id": 1501,
            "name": "FunctionDefinition",
            "src": "465:157:8"
          }
        ],
        "id": 1502,
        "name": "ContractDefinition",
        "src": "394:231:8"
      }
    ],
    "id": 1503,
    "name": "SourceUnit",
    "src": "0:627:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-08-22T18:17:55.010Z",
  "devdoc": {
    "details": "see https://eips.ethereum.org/EIPS/eip-721",
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See `IERC165.supportsInterface`.      * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    },
    "title": "Full ERC721 Token This implementation includes all the required and some optional functionality of the ERC721 standard Moreover, it includes approve all functionality using operator terminology"
  },
  "userdoc": {
    "methods": {}
  }
}